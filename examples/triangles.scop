#                                                     
#          <|                                         
#           A                                         
#          /.\                                       
#     <|  [""M#                                     
#      A   | #            Clan McCloog Castle         
#     /.\ [""M#           [Generated by Clan 0.8.0]
#    [""M# | #  U"U#U                              
#     | #  | #  \ .:/                                
#     | #  | #___| #                                  
#     | "--'     .-"                                
#   |"-"-"-"-"-#-#-##                            
#   |     # ## ######                                 
#    \       .::::'/                                 
#     \      ::::'/                                  
#   :8a|    # # ##                                    
#   ::88a      ###                                    
#  ::::888a  8a ##::.                                 
#  ::::::888a88a[]::::                                
# :::::::::SUNDOGa8a::::. ..                          
# :::::8::::888:Y8888:::::::::...                     
#::':::88::::888::Y88a______________________________________________________
#:: ::::88a::::88a:Y88a                                  __---__-- __
#' .: ::Y88a:::::8a:Y88a                            __----_-- -------_-__
#  :' ::::8P::::::::::88aa.                   _ _- --  --_ --- __  --- __--
#.::  :::::::::::::::::::Y88as88a...s88aa.
#
# [File generated by the OpenScop Library 0.9.0]

<OpenScop>

# =============================================== Global
# Language
C

# Context
CONTEXT
0 2 0 0 0 0

# Parameters are not provided
0


# Number of statements
8

# =============================================== Statement 1
# Number of relations describing the statement:
4

# ----------------------------------------------  1.1 Domain
DOMAIN
5 4 2 0 0 0
# e/i|  i    j |  1  
   1    1    0    0    ## i >= 0
   1   -1    0    9    ## -i+9 >= 0
   1   -1    1    0    ## -i+j >= 0
   1   -1   -1   10    ## -i-j+10 >= 0
   1   -2    0   10    ## -2*i+10 >= 0

# ----------------------------------------------  1.2 Scattering
SCATTERING
5 9 5 2 0 0
# e/i| c1   c2   c3   c4   c5 |  i    j |  1  
   0   -1    0    0    0    0    0    0    0    ## c1 == 0
   0    0   -1    0    0    0    1    0    0    ## c2 == i
   0    0    0   -1    0    0    0    0    0    ## c3 == 0
   0    0    0    0   -1    0    0    1    0    ## c4 == j
   0    0    0    0    0   -1    0    0    0    ## c5 == 0

# ----------------------------------------------  1.3 Access
READ
1 5 1 2 0 0
# e/i| Arr|  i    j |  1  
   0   -1    0    0    1    ## Arr == i

READ
1 5 1 2 0 0
# e/i| Arr|  i    j |  1  
   0   -1    0    0    2    ## Arr == j

# ----------------------------------------------  1.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
2
# List of original iterators
i j
# Statement body expression
printf("%d, %d\n", i, j);
</body>

# =============================================== Statement 2
# Number of relations describing the statement:
4

# ----------------------------------------------  2.1 Domain
DOMAIN
5 4 2 0 0 0
# e/i|  i    j |  1  
   1    1    0    0    ## i >= 0
   1   -1    0    9    ## -i+9 >= 0
   1    1    1  -10    ## i+j-10 >= 0
   1    1   -1   -1    ## i-j-1 >= 0
   1    2    0  -11    ## 2*i-11 >= 0

# ----------------------------------------------  2.2 Scattering
SCATTERING
5 9 5 2 0 0
# e/i| c1   c2   c3   c4   c5 |  i    j |  1  
   0   -1    0    0    0    0    0    0    0    ## c1 == 0
   0    0   -1    0    0    0    1    0    0    ## c2 == i
   0    0    0   -1    0    0    0    0    1    ## c3 == 1
   0    0    0    0   -1    0    0    1    0    ## c4 == j
   0    0    0    0    0   -1    0    0    0    ## c5 == 0

# ----------------------------------------------  2.3 Access
READ
1 5 1 2 0 0
# e/i| Arr|  i    j |  1  
   0   -1    0    0    1    ## Arr == i

READ
1 5 1 2 0 0
# e/i| Arr|  i    j |  1  
   0   -1    0    0    2    ## Arr == j

# ----------------------------------------------  2.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
2
# List of original iterators
i j
# Statement body expression
printf("%d, %d\n", i, j);
</body>

# =============================================== Statement 3
# Number of relations describing the statement:
4

# ----------------------------------------------  3.1 Domain
DOMAIN
# Union with 2 parts
2
# Union part No.1
6 4 2 0 0 0
# e/i|  i    j |  1  
   1    1    0    0    ## i >= 0
   1   -1    0    6    ## -i+6 >= 0
   1    0    1    0    ## j >= 0
   1    0   -1    6    ## -j+6 >= 0
   1   -1    0    3    ## -i+3 >= 0
   1    1   -1    0    ## i-j >= 0
# Union part No.2
6 4 2 0 0 0
# e/i|  i    j |  1  
   1    1    0    0    ## i >= 0
   1   -1    0    6    ## -i+6 >= 0
   1    0    1    0    ## j >= 0
   1    0   -1    6    ## -j+6 >= 0
   1    1    0   -4    ## i-4 >= 0
   1   -1   -1    6    ## -i-j+6 >= 0

# ----------------------------------------------  3.2 Scattering
SCATTERING
5 9 5 2 0 0
# e/i| c1   c2   c3   c4   c5 |  i    j |  1  
   0   -1    0    0    0    0    0    0    1    ## c1 == 1
   0    0   -1    0    0    0    1    0    0    ## c2 == i
   0    0    0   -1    0    0    0    0    0    ## c3 == 0
   0    0    0    0   -1    0    0    1    0    ## c4 == j
   0    0    0    0    0   -1    0    0    0    ## c5 == 0

# ----------------------------------------------  3.3 Access
READ
1 5 1 2 0 0
# e/i| Arr|  i    j |  1  
   0   -1    0    0    1    ## Arr == i

READ
1 5 1 2 0 0
# e/i| Arr|  i    j |  1  
   0   -1    0    0    2    ## Arr == j

# ----------------------------------------------  3.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
2
# List of original iterators
i j
# Statement body expression
printf("%d, %d\n", i, j);
</body>

# =============================================== Statement 4
# Number of relations describing the statement:
4

# ----------------------------------------------  4.1 Domain
DOMAIN
# Union with 2 parts
2
# Union part No.1
6 4 2 0 0 0
# e/i|  i    j |  1  
   1    1    0    0    ## i >= 0
   1   -1    0    6    ## -i+6 >= 0
   1    0    1    0    ## j >= 0
   1    0   -1    6    ## -j+6 >= 0
   1   -1    0    3    ## -i+3 >= 0
   1    1    1   -6    ## i+j-6 >= 0
# Union part No.2
6 4 2 0 0 0
# e/i|  i    j |  1  
   1    1    0    0    ## i >= 0
   1   -1    0    6    ## -i+6 >= 0
   1    0    1    0    ## j >= 0
   1    0   -1    6    ## -j+6 >= 0
   1    1    0   -4    ## i-4 >= 0
   1   -1    1    0    ## -i+j >= 0

# ----------------------------------------------  4.2 Scattering
SCATTERING
5 9 5 2 0 0
# e/i| c1   c2   c3   c4   c5 |  i    j |  1  
   0   -1    0    0    0    0    0    0    1    ## c1 == 1
   0    0   -1    0    0    0    1    0    0    ## c2 == i
   0    0    0   -1    0    0    0    0    1    ## c3 == 1
   0    0    0    0   -1    0    0    1    0    ## c4 == j
   0    0    0    0    0   -1    0    0    0    ## c5 == 0

# ----------------------------------------------  4.3 Access
READ
1 5 1 2 0 0
# e/i| Arr|  i    j |  1  
   0   -1    0    0    1    ## Arr == i

READ
1 5 1 2 0 0
# e/i| Arr|  i    j |  1  
   0   -1    0    0    2    ## Arr == j

# ----------------------------------------------  4.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
2
# List of original iterators
i j
# Statement body expression
printf("%d, %d\n", i, j);
</body>

# =============================================== Statement 5
# Number of relations describing the statement:
4

# ----------------------------------------------  5.1 Domain
DOMAIN
4 4 2 0 0 0
# e/i|  i    j |  1  
   1    1    0    0    ## i >= 0
   1   -1    0    6    ## -i+6 >= 0
   1    0    1    0    ## j >= 0
   1    1   -1    0    ## i-j >= 0

# ----------------------------------------------  5.2 Scattering
SCATTERING
5 9 5 2 0 0
# e/i| c1   c2   c3   c4   c5 |  i    j |  1  
   0   -1    0    0    0    0    0    0    2    ## c1 == 2
   0    0   -1    0    0    0    1    0    0    ## c2 == i
   0    0    0   -1    0    0    0    0    0    ## c3 == 0
   0    0    0    0   -1    0    0    1    0    ## c4 == j
   0    0    0    0    0   -1    0    0    0    ## c5 == 0

# ----------------------------------------------  5.3 Access
READ
1 5 1 2 0 0
# e/i| Arr|  i    j |  1  
   0   -1    0    0    1    ## Arr == i

READ
1 5 1 2 0 0
# e/i| Arr|  i    j |  1  
   0   -1    0    0    2    ## Arr == j

# ----------------------------------------------  5.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
2
# List of original iterators
i j
# Statement body expression
printf("%d, %d\n", i, j);
</body>

# =============================================== Statement 6
# Number of relations describing the statement:
4

# ----------------------------------------------  6.1 Domain
DOMAIN
4 4 2 0 0 0
# e/i|  i    j |  1  
   1    1    0    0    ## i >= 0
   1   -1    0    6    ## -i+6 >= 0
   1   -1    1    0    ## -i+j >= 0
   1    0   -1    6    ## -j+6 >= 0

# ----------------------------------------------  6.2 Scattering
SCATTERING
5 9 5 2 0 0
# e/i| c1   c2   c3   c4   c5 |  i    j |  1  
   0   -1    0    0    0    0    0    0    2    ## c1 == 2
   0    0   -1    0    0    0    1    0    0    ## c2 == i
   0    0    0   -1    0    0    0    0    1    ## c3 == 1
   0    0    0    0   -1    0    0    1    0    ## c4 == j
   0    0    0    0    0   -1    0    0    0    ## c5 == 0

# ----------------------------------------------  6.3 Access
READ
1 5 1 2 0 0
# e/i| Arr|  i    j |  1  
   0   -1    0    0    1    ## Arr == i

READ
1 5 1 2 0 0
# e/i| Arr|  i    j |  1  
   0   -1    0    0    2    ## Arr == j

# ----------------------------------------------  6.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
2
# List of original iterators
i j
# Statement body expression
printf("%d, %d\n", i, j);
</body>

# =============================================== Statement 7
# Number of relations describing the statement:
4

# ----------------------------------------------  7.1 Domain
DOMAIN
4 4 2 0 0 0
# e/i|  i    j |  1  
   1    1    0    0    ## i >= 0
   1   -1    0    6    ## -i+6 >= 0
   1    0    1    0    ## j >= 0
   1   -1   -1    6    ## -i-j+6 >= 0

# ----------------------------------------------  7.2 Scattering
SCATTERING
5 9 5 2 0 0
# e/i| c1   c2   c3   c4   c5 |  i    j |  1  
   0   -1    0    0    0    0    0    0    3    ## c1 == 3
   0    0   -1    0    0    0    1    0    0    ## c2 == i
   0    0    0   -1    0    0    0    0    0    ## c3 == 0
   0    0    0    0   -1    0    0    1    0    ## c4 == j
   0    0    0    0    0   -1    0    0    0    ## c5 == 0

# ----------------------------------------------  7.3 Access
READ
1 5 1 2 0 0
# e/i| Arr|  i    j |  1  
   0   -1    0    0    1    ## Arr == i

READ
1 5 1 2 0 0
# e/i| Arr|  i    j |  1  
   0   -1    0    0    2    ## Arr == j

# ----------------------------------------------  7.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
2
# List of original iterators
i j
# Statement body expression
printf("%d, %d\n", i, j);
</body>

# =============================================== Statement 8
# Number of relations describing the statement:
4

# ----------------------------------------------  8.1 Domain
DOMAIN
4 4 2 0 0 0
# e/i|  i    j |  1  
   1    1    0    0    ## i >= 0
   1   -1    0    6    ## -i+6 >= 0
   1    1    1   -6    ## i+j-6 >= 0
   1    0   -1    6    ## -j+6 >= 0

# ----------------------------------------------  8.2 Scattering
SCATTERING
5 9 5 2 0 0
# e/i| c1   c2   c3   c4   c5 |  i    j |  1  
   0   -1    0    0    0    0    0    0    3    ## c1 == 3
   0    0   -1    0    0    0    1    0    0    ## c2 == i
   0    0    0   -1    0    0    0    0    1    ## c3 == 1
   0    0    0    0   -1    0    0    1    0    ## c4 == j
   0    0    0    0    0   -1    0    0    0    ## c5 == 0

# ----------------------------------------------  8.3 Access
READ
1 5 1 2 0 0
# e/i| Arr|  i    j |  1  
   0   -1    0    0    1    ## Arr == i

READ
1 5 1 2 0 0
# e/i| Arr|  i    j |  1  
   0   -1    0    0    2    ## Arr == j

# ----------------------------------------------  8.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
2
# List of original iterators
i j
# Statement body expression
printf("%d, %d\n", i, j);
</body>

# =============================================== Extensions
<scatnames>
b0 i b1 j b2
</scatnames>

<arrays>
# Number of arrays
3
# Mapping array-identifiers/array-names
1 i
2 j
3 printf
</arrays>

<coordinates>
# File name
triangles.c
# Starting line and column
3 0
# Ending line and column
51 0
# Indentation
0
</coordinates>

</OpenScop>

